"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const CompanyController_1 = require("../controllers/CompanyController");
const JobsController_1 = require("../controllers/JobsController");
const AuthMiddleWare_1 = require("../middlewares/AuthMiddleWare");
const ActivityController_1 = require("../controllers/ActivityController");
const router = express_1.Router();
const companyController = new CompanyController_1.CompanyController();
const jobsController = new JobsController_1.JobsController();
const activityController = new ActivityController_1.ActivityController();
router.get('/:slug', AuthMiddleWare_1.AuthMiddleWare, companyController.GetOneCompany);
router.patch('/:slug', AuthMiddleWare_1.AuthMiddleWare, companyController.updateCompany);
router.patch('/:slug/removetags', AuthMiddleWare_1.AuthMiddleWare, companyController.removeTagsCompany);
router.patch('/:slug/avatar', AuthMiddleWare_1.AuthMiddleWare, companyController.updateCompanyAvatar);
router.patch('/:slug/cover', AuthMiddleWare_1.AuthMiddleWare, companyController.updateCompanyCover);
router.post('/:slug/follow', AuthMiddleWare_1.AuthMiddleWare, companyController.followCompany);
router.post('/:slug/un-follow', AuthMiddleWare_1.AuthMiddleWare, companyController.unFollowCompany);
router.delete('/:slug', AuthMiddleWare_1.AuthMiddleWare, companyController.deleteCompany);
router.post('/:slug/switch', AuthMiddleWare_1.AuthMiddleWare, companyController.switchToCompany);
router.get('/:slug/activity', AuthMiddleWare_1.AuthMiddleWare, activityController.getActivityOfCompany);
router.post('/:slug/activity', AuthMiddleWare_1.AuthMiddleWare, activityController.AddNewActivityToCompany);
router.get('/:slug/jobs', AuthMiddleWare_1.AuthMiddleWare, jobsController.getAllJobs);
router.get('/:slug/jobs/:jobSlug', AuthMiddleWare_1.AuthMiddleWare, jobsController.getOneJob);
router.get('/:slug/jobs/:jobSlug/info', jobsController.getOneJobForNotLOgin);
router.get('/:slug/jobs/:jobSlug/applied', AuthMiddleWare_1.AuthMiddleWare, jobsController.getApplicants);
router.get('/:slug/jobs/:jobSlug/shortlisted', AuthMiddleWare_1.AuthMiddleWare, jobsController.getShortListed);
router.get('/:slug/jobs/:jobSlug/interview', AuthMiddleWare_1.AuthMiddleWare, jobsController.getInterviews);
router.post('/:slug/jobs', AuthMiddleWare_1.AuthMiddleWare, jobsController.createJob);
router.post('/:slug/jobs/:jobSlug/apply', AuthMiddleWare_1.AuthMiddleWare, jobsController.applyJob);
router.post('/:slug/jobs/:jobSlug/shortlisted', AuthMiddleWare_1.AuthMiddleWare, jobsController.addApplicantsToShortList);
router.post('/:slug/jobs/:jobSlug/un-shortlisted/:userSlug', AuthMiddleWare_1.AuthMiddleWare, jobsController.removeApplicantFromShortList);
router.post('/:slug/jobs/:jobSlug/interview/:userSlug', AuthMiddleWare_1.AuthMiddleWare, jobsController.createInterviewForapplicants);
router.patch('/:slug/jobs/:jobSlug', AuthMiddleWare_1.AuthMiddleWare, jobsController.updateJob);
router.delete('/:slug/jobs/:jobSlug', AuthMiddleWare_1.AuthMiddleWare, jobsController.deleteJob);
exports.default = router;
//# sourceMappingURL=CompaniesRoute.js.map